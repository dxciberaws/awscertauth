<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dxciber</groupId>
  <artifactId>ssm-certauth</artifactId>
  <version>0.0.3-SNAPSHOT</version>
  <properties>
   <artifactrepo.url>s3://automation-dxciber-ops</artifactrepo.url>
   <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   <replacer.version>1.5.3</replacer.version>
   <template.file>SSM-CertAuth.template</template.file>
  </properties>
  <repositories>
    <repository>
        <id>dxciber-aws-snapshot</id>
        <name>DXC Iberia AWS LZ Snapshot Repository</name>
        <url>${artifactrepo.url}/lambda/snapshot</url>
    </repository>
    <repository>
        <id>dxciber-aws-release</id>
        <name>DXC Iberia AWS LZ Release Repository</name>
        <url>${artifactrepo.url}/lambda/release</url>
    </repository>
  </repositories>
  <build>
    <directory>${basedir}/target</directory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <extensions>
      <extension>
        <groupId>com.github.platform-team</groupId>
        <artifactId>aws-maven</artifactId>
        <version>6.0.0</version>
      </extension>
    </extensions>
    <plugins>
		<plugin>
		   <groupId>org.apache.maven.plugins</groupId>
		   <artifactId>maven-compiler-plugin</artifactId>
		   <version>3.8.0</version>
		   <executions>
		     <execution>
		       <id>default-compile</id>
		       <phase>compile</phase>
		       <goals>
		          <goal>compile</goal>
		       </goals>
		       <configuration>
		         <skipMain>true</skipMain>
		       </configuration>
		     </execution>
		   </executions>
		</plugin>    
    <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-plugin</artifactId>
	        <version>2.22.0</version>
	        <configuration>
	          <skipTests>true</skipTests>
	        </configuration>
	  </plugin>
    <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>never</phase>
            <configuration>
              <finalName>unwanted</finalName>
              <classifier>unwanted</classifier>
            </configuration>
          </execution>
        </executions>
    </plugin>
    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>install-requirements</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>docker</executable>
          <!-- optional -->
          <workingDirectory>${basedir}</workingDirectory>
          <arguments>
            <argument>run</argument>
            <argument>-v</argument>
            <argument>${basedir}:/var/task</argument>
            <argument>&quot;lambci/lambda:build-python3.7&quot;</argument>
            <argument>/bin/sh</argument>
            <argument>-c</argument>
            <argument>&quot;pip install -r requirements.txt -t lib &amp;&amp; exit&quot;</argument>
          </arguments>
          <environmentVariables>
          </environmentVariables>
        </configuration>
    </plugin>
    <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-assembly-plugin</artifactId>
		  <version>3.1.0</version>
		  <configuration>
		    <descriptors>
  		       <descriptor>/zip.xml</descriptor>
		    </descriptors>
		    <finalName>ssm-certauth-${project.version}</finalName>
		  </configuration>
		  <executions>
		    <execution>
		      <id>make-assembly</id>
		      <phase>package</phase>
		      <goals>
		        <goal>single</goal>
		      </goals>
		    </execution>
		  </executions>
		</plugin>
    <plugin>
      <groupId>org.codehaus.gmaven</groupId>
      <artifactId>groovy-maven-plugin</artifactId>
      <version>2.1.1</version>
      <dependencies>
        <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <version>1.15</version>
        </dependency>
      </dependencies>
      <executions>
        <execution>
          <phase>install</phase>
          <goals>
            <goal>execute</goal>
          </goals>
          <configuration>
            <source>
              import org.apache.commons.codec.digest.DigestUtils
              def basedir = project.basedir.absolutePath.replace('\\','/')
              def is=new File(basedir+"/target/${project.build.finalName}-ssm.zip").newInputStream()
              def hash=org.apache.commons.codec.digest.DigestUtils.sha256Hex(is)
              project.properties.hash=hash
            </source>
          </configuration>
        </execution>
      </executions>
    </plugin>	
    <plugin>
    	<groupId>com.google.code.maven-replacer-plugin</groupId>
    	<artifactId>replacer</artifactId>
	    <version>${replacer.version}</version>
    	<executions>
		    <execution>
		      <id>sha256</id>
	  		  <phase>install</phase>
    			<goals>
		  	  	<goal>replace</goal>
		    	</goals>
	        <configuration>
   		  	 <file>${basedir}/cfn/SSM-CertAuth.template</file>
     		   <outputFile>target/${template.file}</outputFile>
  	     	 <replacements>
        			<replacement>
			    	   <token>@SHA256@</token>
		  	  	   <value>${hash}</value>
  	  	    	</replacement>
        			<replacement>
			    	   <token>@ARTIFACT@</token>
		  	  	   <value>${project.build.finalName}-ssm.zip</value>
  	  	    	</replacement>
        		</replacements>
      	  </configuration>
  	  	</execution>
    	</executions>
    </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
      <id>dxciber-ops-release</id>
      <name>DXCIBER_OPS Automation Artifact Repository - Release</name>
      <url>${artifactrepo.url}/python/release</url>
    </repository>
    <snapshotRepository>
      <id>dxciber-ops-snapshot</id>
      <name>DXCIBER_OPS Automation Artifact Repository - Snapshot</name>
      <url>${artifactrepo.url}/python/snapshot</url>
    </snapshotRepository>
  </distributionManagement>
</project>